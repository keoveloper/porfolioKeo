---
import '../styles/global.css';

export interface Props {
  title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="es" class="scroll-smooth">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Portfolio de Desarrollador Full Stack" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <title>{title}</title>
    
    <!-- Fuentes de Google -->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&family=JetBrains+Mono:wght@400;500&display=swap" rel="stylesheet" />
  </head>
  
  <body class="bg-gray-950 text-gray-100 font-sans antialiased overflow-x-hidden">
    <div class="cursor" id="cursor"></div>
    <div class="cursor-follower" id="cursor-follower"></div>
    
    <!-- Background Pattern -->
    <div class="fixed inset-0 -z-10">
      <div class="absolute inset-0 bg-[radial-gradient(circle_at_50%_50%,rgba(120,119,198,0.1),transparent_50%)]"></div>
      <div class="absolute inset-0 bg-[linear-gradient(rgba(255,255,255,0.02)_1px,transparent_1px),linear-gradient(90deg,rgba(255,255,255,0.02)_1px,transparent_1px)] bg-[size:100px_100px]"></div>
    </div>
    
    <slot />
    
    <style>
      html {
        font-family: 'Inter', system-ui, sans-serif;
      }
      
      .cursor {
        position: fixed;
        width: 8px;
        height: 8px;
        background: #10b981;
        border-radius: 50%;
        pointer-events: none;
        z-index: 9999;
        transition: transform 0.1s ease;
      }
      
      .cursor-follower {
        position: fixed;
        width: 30px;
        height: 30px;
        border: 2px solid rgba(16, 185, 129, 0.3);
        border-radius: 50%;
        pointer-events: none;
        z-index: 9998;
        transition: all 0.15s ease;
      }
      
      @media (max-width: 768px) {
        .cursor,
        .cursor-follower {
          display: none;
        }
      }
    </style>
    
    <script>
      // Cursor personalizado
      const cursor = document.getElementById('cursor');
      const follower = document.getElementById('cursor-follower');
      
      if (cursor && follower) {
        document.addEventListener('mousemove', (e) => {
          cursor.style.left = e.clientX - 4 + 'px';
          cursor.style.top = e.clientY - 4 + 'px';
          
          follower.style.left = e.clientX - 15 + 'px';
          follower.style.top = e.clientY - 15 + 'px';
        });
        
        // Efectos en hover
        document.querySelectorAll('a, button, .hover-effect').forEach(el => {
          el.addEventListener('mouseenter', () => {
            cursor.style.transform = 'scale(1.5)';
            follower.style.transform = 'scale(1.2)';
            follower.style.borderColor = 'rgba(16, 185, 129, 0.6)';
          });
          
          el.addEventListener('mouseleave', () => {
            cursor.style.transform = 'scale(1)';
            follower.style.transform = 'scale(1)';
            follower.style.borderColor = 'rgba(16, 185, 129, 0.3)';
          });
        });
      }
      
      // Animaciones de scroll
      const observerOptions = {
        threshold: 0.1,
        rootMargin: '0px 0px -50px 0px'
      };
      
      const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
          if (entry.isIntersecting) {
            entry.target.classList.add('animate-in');
          }
        });
      }, observerOptions);
      
      document.querySelectorAll('.fade-in').forEach(el => observer.observe(el));
    </script>
  </body>
</html>
